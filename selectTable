#! /usr/bin/bash
read -p "enter a valid table name: " table
validation=$(. validName "$table")
if [[ -f $table ]]; then
 PS3="$table -->  "
select choice in all byColumnValue byColumnName "Back To Connect database" Exit
do 
case $choice  in 
all)
cut -d " " -f 1  $table
echo -e "${GREEN}all records have been selected successfully${ENDCOLOR}"
;;
byColumnValue)
read -p "enter a valid column name: " column
validation1=$(. validName "$column")
order=$(awk -F : -v m=$column '{if(m==$1){print NR}}' "$table.meta")
if [[ $order -ne 0 ]]; then
read -p "enter a valid value: " value
selectedRows=$(awk -F : -v v=$value  -v o=$order '{if(v==$o){print NR}}' $table)
rowsNum=0
for i in $selectedRows;
do
rowsNum=$(($rowsNum+1))
sed -n "${i}p" $table
done
if [[ $rowsNum -eq 0 ]]; then
    echo -e "${YELLOW}0 rows are selected${ENDCOLOR}"
else
    echo -e "${GREEN}$rowsNum rows are selected${ENDCOLOR}"
fi
elif [[ $validation1 -eq 1 ]]; then
    echo -e "${RED}column name is invalid (No special charchters or white spaces)${ENDCOLOR}"
else
    echo -e "${RED}column not exists${ENDCOLOR}" 
fi
;;
byColumnName)
read -p "enter a valid column name: " column
validation1=$(. validName "$column")
order=$(awk -F : -v m=$column '{if(m==$1){print NR}}' "$table.meta")
if [[ $order -ne 0 ]]; then
cut -d : -f "$order"  $table
echo -e "${GREEN}column has been projected successfully${ENDCOLOR}"
elif [[ $validation1 -eq 1 ]]; then
    echo -e "${RED}column name is invalid (No special charchters or white spaces)${ENDCOLOR}"
else
    echo -e "${RED}column not exists${ENDCOLOR}" 
fi
;;
"Back To Connect database")

cd ../

. connectDB
;;
Exit)
exit
;;
*)
echo -e "${RED}enter a valid choice${ENDCOLOR}"
;;
esac
done
elif [[ $validation -eq 1 ]]; then
    echo -e "${RED}table name is invalid (No special charchters or white spaces)${ENDCOLOR}"
else
    echo -e "${RED}table not exists${ENDCOLOR}"
fi
. connectDB





